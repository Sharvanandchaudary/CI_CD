name: Minimal Zephyr UART CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  uart-test:
    runs-on: ubuntu-latest

    env:
      ZEPHYR_TOOLCHAIN_VARIANT: zephyr
      ZEPHYR_SDK_INSTALL_DIR: /opt/toolchains/zephyr-sdk

    steps:
    - name: Checkout source
      uses: actions/checkout@v3

    - name: Install system dependencies
      run: |
        sudo apt update && sudo apt install -y \
          git cmake ninja-build gperf ccache dfu-util device-tree-compiler wget \
          python3-dev python3-pip python3-setuptools python3-wheel file make \
          gcc g++ xz-utils libsdl2-dev xterm curl

    - name: Install Zephyr SDK
      run: |
        sudo mkdir -p /opt/toolchains
        wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.3/zephyr-sdk-0.16.3_linux-x86_64.tar.xz
        tar -xf zephyr-sdk-0.16.3_linux-x86_64.tar.xz
        sudo mv zephyr-sdk-0.16.3 /opt/toolchains/zephyr-sdk
        /opt/toolchains/zephyr-sdk/setup.sh -t all -c

    - name: Setup Zephyr environment and modules
      run: |
        pip3 install --user west
        export PATH=$HOME/.local/bin:$PATH
        west init .
        west update
        west zephyr-export
        pip3 install --user -r zephyr/scripts/requirements.txt

    - name: Build hello_world firmware with board
      run: |
        export PATH=$HOME/.local/bin:$PATH
        west build -b qemu_cortex_m3 app/hello_world -p always

    - name: Build and simulate
      run: |
        export PATH=$HOME/.local/bin:$PATH

        # ✅ 1. Clean full build with board
        west build -b qemu_cortex_m3 app/hello_world -p always

        # ✅ 2. Move into app dir and reuse build
        cd app/hello_world

        # ✅ 3. Simulate via QEMU from configured build
        west build -t run | tee output.log

        # ✅ 4. Check UART log for success
        echo "Checking UART output:"
        grep "Hello World" output.log || (
          echo "[FAIL] UART output not found"
          cat output.log
          exit 1
        )

